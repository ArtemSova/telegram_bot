from aiogram import Router, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message

from config_db.users_db import UsersSQL
from core.keyboards.main_menu import main_menu_kb


# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞

router: Router = Router()

# –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_dict: dict[int, dict[str, str | int | bool]] = {}

class FSMFillForm(StatesGroup):
    fill_name = State()
    fill_birthday = State()
    fill_phone_number = State()



# –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ú–æ—è –∞–Ω–∫–µ—Ç–∞"
@router.message(F.text == "–ú–æ—è –∞–Ω–∫–µ—Ç–∞ üìú")
async def my_questionnaire(message: Message):
    await message.answer(f'–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞: \n'
                         f'<b>user_name:</b> {UsersSQL().select_user_info(message.from_user.id)[0][0]}\n'
                         f'<b>–ò–º—è:</b> {UsersSQL().select_user_info(message.from_user.id)[0][1]}\n'
                         f'<b>–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è:</b> {UsersSQL().select_user_info(message.from_user.id)[0][2]}\n'
                         f'<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {UsersSQL().select_user_info(message.from_user.id)[0][3]}\n'
                         f'<b>–ú–æ–Ω–µ—Ç—ã:</b> {UsersSQL().select_user_info(message.from_user.id)[0][4]}\n',
                         reply_markup=main_menu_kb,
                         )

# –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–ø–æ–ª–Ω–∏—Ç—å\–∏–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"
@router.message(F.text == "–ó–∞–ø–æ–ª–Ω–∏—Ç—å\–∏–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É üñå")
async def anceta_step_one(message: Message, state: FSMContext):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è. –ú–æ–∂–Ω–æ –§.–ò.–û')
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
    await state.set_state(FSMFillForm.fill_name)

# –ê–Ω–∫–µ—Ç–∞ –≤—Ç–æ—Ä–æ–π —à–∞–≥
@router.message(StateFilter(FSMFillForm.fill_name))
async def anceta_step_two(message: Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä–µ
    await state.update_data(name=message.text)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è. –§–æ—Ä–º–∞—Ç: –î–î.–ú–ú.–ì–ì–ì–ì')
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
    await state.set_state(FSMFillForm.fill_birthday)

# –ê–Ω–∫–µ—Ç–∞ —Ç—Ä–µ—Ç–∏–π —à–∞–≥
@router.message(StateFilter(FSMFillForm.fill_birthday), F.text.regexp(r"^(\d\d.\d\d.\d{4})$"))
async def anceta_step_three(message: Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä–µ
    await state.update_data(birthday=message.text)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ÃÜ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –§–æ—Ä–º–∞—Ç: +7-–•–•–•-–•–•–•-–•–•-–•–•/8-XXX-XXX-XX-XX')
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    await state.set_state(FSMFillForm.fill_phone_number)

# –ê–Ω–∫–µ—Ç–∞ —á–µ—Ç–≤–µ—Ä—Ç—ã–∏ÃÜ —à–∞–≥
@router.message(StateFilter(FSMFillForm.fill_phone_number), F.text.regexp(r"^((?:\+7|8)(?:-\d{2,3}){4})$"))
async def anceta_step_four(message: Message, state: FSMContext):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä–µ
    await state.update_data(phone_number=message.text)
    await message.answer('–ê–Ω–∫–µ—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞.')
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–ª–æ–≤–∞—Ä—å
    user_dict[message.from_user.id] = await state.get_data()
    # –ü–µ—Ä–µ–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ë–î
    UsersSQL().update_user_info(user_id=message.from_user.id, first_name=user_dict.get(message.from_user.id).get("name"),
                                birthday=user_dict.get(message.from_user.id).get("birthday"), phone_number=user_dict.get(message.from_user.id).get("phone_number"))
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer(f'–ê–Ω–∫–µ—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∞: \n'
                         f'<b>uer_name:</b> {UsersSQL().select_user_info(message.from_user.id)[0][0]}\n'
                         f'<b>–ò–º—è:</b> {UsersSQL().select_user_info(message.from_user.id)[0][1]}\n'
                         f'<b>–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è:</b> {UsersSQL().select_user_info(message.from_user.id)[0][2]}\n'
                         f'<b>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</b> {UsersSQL().select_user_info(message.from_user.id)[0][3]}\n'
                         f'<b>–ú–æ–Ω–µ—Ç—ã:</b> {UsersSQL().select_user_info(message.from_user.id)[0][4]}\n',
                         reply_markup=main_menu_kb,
                         )
